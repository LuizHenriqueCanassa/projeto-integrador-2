--USERS

CREATE TABLE USERS (
                       ID INTEGER NOT NULL,
                       NAME VARCHAR(100) NOT NULL,
                       USERNAME VARCHAR(100) NOT NULL,
                       PASSWORD VARCHAR(100) NOT NULL,
                       ACTIVE BOOLEAN  NOT NULL DEFAULT TRUE,
                       CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                       UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_USERS_ID START 1 INCREMENT 1 OWNED BY USERS.ID;

ALTER TABLE USERS ADD CONSTRAINT PK_ID_USERS PRIMARY KEY (ID);
ALTER TABLE USERS ADD CONSTRAINT UK_USERNAME_USERS UNIQUE (USERNAME);

--ROLES

CREATE TABLE ROLES (
                       ID INTEGER NOT NULL,
                       NAME VARCHAR(100) NOT NULL,
                       DESCRIPTION VARCHAR(100) NOT NULL,
                       CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                       UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_ROLES_ID START 1 INCREMENT 1 OWNED BY ROLES.ID;

ALTER TABLE ROLES ADD CONSTRAINT PK_ID_ROLES PRIMARY KEY (ID);
ALTER TABLE ROLES ADD CONSTRAINT UK_NAME_ROLES UNIQUE (NAME);

--USERS_ROLES

CREATE TABLE USERS_ROLES (
                             USER_ID INTEGER NOT NULL,
                             ROLE_ID INTEGER NOT NULL
);

ALTER TABLE USERS_ROLES ADD CONSTRAINT FK_USERS_ID FOREIGN KEY (USER_ID) REFERENCES users(ID);
ALTER TABLE USERS_ROLES ADD CONSTRAINT FK_ROLES_ID FOREIGN KEY (ROLE_ID) REFERENCES roles(ID);

--CATEGORIES

CREATE TABLE CATEGORIES (
                            ID INTEGER NOT NULL,
                            NAME VARCHAR(100) NOT NULL,
                            ACTIVE BOOLEAN  NOT NULL DEFAULT TRUE,
                            CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                            UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_CATEGORIES_ID START 1 INCREMENT 1 OWNED BY CATEGORIES.ID;

ALTER TABLE CATEGORIES ADD CONSTRAINT PK_ID_CATEGORIES PRIMARY KEY (ID);
ALTER TABLE CATEGORIES ADD CONSTRAINT UK_NAME_CATEGORIES UNIQUE (NAME);

--PRODUCTS

CREATE TABLE PRODUCTS (
                          ID INTEGER NOT NULL,
                          NAME VARCHAR(100) NOT NULL,
                          PRICE DECIMAL(10, 2) NOT NULL,
                          DESCRIPTION TEXT NOT NULL,
                          ID_CATEGORY INTEGER NOT NULL,
                          ACTIVE BOOLEAN NOT NULL DEFAULT TRUE,
                          CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                          UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_PRODUCTS_ID START 1 INCREMENT 1 OWNED BY PRODUCTS.ID;

ALTER TABLE PRODUCTS ADD CONSTRAINT PK_ID_PRODUCTS PRIMARY KEY (ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT UK_NAME_PRODUCTS UNIQUE (NAME);

ALTER TABLE PRODUCTS ADD CONSTRAINT FK_CATEGORY_ID FOREIGN KEY (ID_CATEGORY) REFERENCES CATEGORIES(ID);

--CUSTOMERS

CREATE TABLE CUSTOMERS (
                           ID INTEGER NOT NULL,
                           NAME VARCHAR(100) NOT NULL,
                           DOCUMENT VARCHAR(11) NOT NULL,
                           MOBILE_PHONE VARCHAR(11) NOT NULL,
                           CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                           UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_CUSTOMERS_ID START 1 INCREMENT 1 OWNED BY CUSTOMERS.ID;

ALTER TABLE CUSTOMERS ADD CONSTRAINT PK_ID_CUSTOMERS PRIMARY KEY (ID);
ALTER TABLE CUSTOMERS ADD CONSTRAINT UK_DOCUMENT_CUSTOMERS UNIQUE (DOCUMENT);

--ADDRESSES

CREATE TABLE ADDRESSES (
                           ID INTEGER NOT NULL,
                           STREET_NAME VARCHAR(255) NOT NULL,
                           NUMBER INTEGER NOT NULL,
                           CITY VARCHAR(200) NOT NULL,
                           DISTRICT VARCHAR(200) NOT NULL,
                           ID_CUSTOMER INTEGER NOT NULL,
                           CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                           UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_ADDRESSES_ID START 1 INCREMENT 1 OWNED BY ADDRESSES.ID;

ALTER TABLE ADDRESSES ADD CONSTRAINT PK_ID_ADDRESS PRIMARY KEY (ID);
ALTER TABLE ADDRESSES ADD CONSTRAINT FK_CUSTOMER_ID FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMERS(ID);

--ORDERS

CREATE TYPE ORDER_STATUS AS ENUM ('AWAITING', 'IN_PROCESSING', 'ALREADY', 'DELIVERING', 'DELIVERED', 'CANCELED');

CREATE TABLE ORDERS(
                       ID INTEGER NOT NULL,
                       AMOUNT DECIMAL(10,2) NOT NULL,
                       STATUS ORDER_STATUS NOT NULL,
                       PAID BOOLEAN NOT NULL,
                       CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                       UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_ORDERS_ID START 1 INCREMENT 1 OWNED BY ORDERS.ID;

ALTER TABLE ORDERS ADD CONSTRAINT PK_ID_ORDERS PRIMARY KEY (ID);


--ORDERS_DELIVERY

CREATE TABLE ORDERS_DELIVERY (
                                 ID INTEGER NOT NULL,
                                 ID_ORDERS INTEGER NOT NULL,
                                 ID_CUSTOMER INTEGER NOT NULL,
                                 CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                 UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_ORDERS_DELIVERY_ID START 1 INCREMENT 1 OWNED BY ORDERS_DELIVERY.ID;

ALTER TABLE ORDERS_DELIVERY ADD CONSTRAINT PK_ID_ORDERS_DELIVERY PRIMARY KEY (ID);
ALTER TABLE ORDERS_DELIVERY ADD CONSTRAINT FK_CUSTOMER_ID FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMERS(ID);
ALTER TABLE ORDERS_DELIVERY ADD CONSTRAINT FK_ORDERS_ID FOREIGN KEY (ID_ORDERS) REFERENCES ORDERS(ID);

--ORDERS_LOCAL
CREATE TABLE ORDERS_LOCAL (
                              ID INTEGER NOT NULL,
                              ID_ORDERS INTEGER NOT NULL,
                              CARD_CONTROL INTEGER NOT NULL,
                              CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
                              UPDATED_AT TIMESTAMP
);

CREATE SEQUENCE SQ_ORDERS_LOCAL_ID START 1 INCREMENT 1 OWNED BY ORDERS_LOCAL.ID;

ALTER TABLE ORDERS_LOCAL ADD CONSTRAINT PK_ID_ORDERS_LOCAL PRIMARY KEY (ID);
ALTER TABLE ORDERS_LOCAL ADD CONSTRAINT FK_ORDERS_ID FOREIGN KEY (ID_ORDERS) REFERENCES ORDERS(ID);

--INSERT INICIAIS

--senha-root
INSERT INTO USERS
(ID, NAME, USERNAME, PASSWORD)
VALUES
    (nextval('SQ_USERS_ID'), 'Root', 'root', '$2a$12$PvIzsPwdJSJvgAFDfM6WPu5nToCKuTPRijh4fX6OjwJIsEMLrAh8m');

--senha-admin
INSERT INTO USERS
(ID, NAME, USERNAME, PASSWORD)
VALUES
    (nextval('SQ_USERS_ID'), 'Administrador', 'admin', '$2a$12$IOOSbHD9umswOg2LOHl86uKcwKWnLfBmLdKgqGLF1GRaJaff8j3W.');

--senha-user
INSERT INTO USERS
(ID, NAME, USERNAME, PASSWORD)
VALUES
    (nextval('SQ_USERS_ID'), 'Usuario', 'user', '$2a$12$MEoC5oOz11Df4DYqOjL/QeutqOthlcWVe3y7vkRku2gwvUU6lyZmO');

--123
INSERT INTO USERS
(ID, NAME, USERNAME, PASSWORD)
VALUES
    (nextval('SQ_USERS_ID'), 'Luiz Henrique', 'luiz-canassa', '$2a$12$..RtCNlwCrNSqlggBd1TbuIDjDHHUHmEuOSWimY8Muqh5OWJNfQwW');

INSERT INTO ROLES
(ID, NAME, DESCRIPTION)
VALUES
    (nextval('SQ_ROLES_ID'), 'ROLE_ROOT', 'Root');

INSERT INTO ROLES
(ID, NAME, DESCRIPTION)
VALUES
    (nextval('SQ_ROLES_ID'), 'ROLE_ADMIN', 'Administrador');

INSERT INTO ROLES
(ID, NAME, DESCRIPTION)
VALUES
    (nextval('SQ_ROLES_ID'), 'ROLE_USER', 'Usu√°rio');


INSERT INTO USERS_ROLES
(USER_ID, ROLE_ID)
VALUES
    (1,1);

INSERT INTO USERS_ROLES
(USER_ID, ROLE_ID)
VALUES
    (2,2);

INSERT INTO USERS_ROLES
(USER_ID, ROLE_ID)
VALUES
    (3, 3);

INSERT INTO USERS_ROLES
(USER_ID, ROLE_ID)
VALUES
    (4, 3);